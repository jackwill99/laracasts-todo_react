{"ast":null,"code":"var _jsxFileName = \"/Users/wailwinphyo/root/projects/React/lc-react/src/components/TodoList.js\";\nimport React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList({\n  checkBut,\n  but,\n  completeTodo,\n  markAsEditting,\n  updateTodo,\n  cancelEdit,\n  inputTitle,\n  deleteTodo\n}) {\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    component: \"ul\",\n    className: \"todo-list\",\n    children: checkBut(but).map((todo, index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 300,\n      classNames: \"slide-horizontal\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => completeTodo(todo.id),\n            checked: todo.isComplete && true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), !todo.isEditting ? /*#__PURE__*/_jsxDEV(\"span\", {\n            onDoubleClick: () => markAsEditting(todo.id),\n            className: `todo-item-label ${todo.isComplete ? \"line-through\" : \"\"}`,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: () => updateTodo(todo.id),\n            onKeyDown: event => {\n              if (event.key === \"Enter\") {\n                updateTodo(todo.id);\n              } else if (event.key === \"Escape\") {\n                cancelEdit(todo.id);\n              }\n            },\n            type: \"text\",\n            className: \"todo-item-input\",\n            defaultValue: todo.title,\n            ref: inputTitle,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this) //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x-button\",\n          onClick: () => deleteTodo(todo.id),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"x-button-icon\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/lc-react/src/components/TodoList.js"],"names":["React","CSSTransition","TransitionGroup","TodoList","checkBut","but","completeTodo","markAsEditting","updateTodo","cancelEdit","inputTitle","deleteTodo","map","todo","index","id","isComplete","isEditting","title","event","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,QADc;AAEdC,EAAAA,GAFc;AAGdC,EAAAA,YAHc;AAIdC,EAAAA,cAJc;AAKdC,EAAAA,UALc;AAMdC,EAAAA,UANc;AAOdC,EAAAA,UAPc;AAQdC,EAAAA;AARc,CAAlB,EASG;AACC,sBACI,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,IAA3B;AAAgC,IAAA,SAAS,EAAC,WAA1C;AAAA,cACKP,QAAQ,CAACC,GAAD,CAAR,CAAcO,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBACf,QAAC,aAAD;AAAe,MAAA,OAAO,EAAE,GAAxB;AAA6B,MAAA,UAAU,EAAC,kBAAxC;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,QAAQ,EAAE,MAAMR,YAAY,CAACO,IAAI,CAACE,EAAN,CAFhC;AAGI,YAAA,OAAO,EAAEF,IAAI,CAACG,UAAL,IAAmB;AAHhC;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMK,CAACH,IAAI,CAACI,UAAN,gBACG;AACI,YAAA,aAAa,EAAE,MACXV,cAAc,CAACM,IAAI,CAACE,EAAN,CAFtB;AAII,YAAA,SAAS,EAAG,mBACRF,IAAI,CAACG,UAAL,GAAkB,cAAlB,GAAmC,EACtC,EANL;AAAA,sBAQKH,IAAI,CAACK;AARV;AAAA;AAAA;AAAA;AAAA,kBADH,gBAYG;AACI,YAAA,MAAM,EAAE,MAAMV,UAAU,CAACK,IAAI,CAACE,EAAN,CAD5B;AAEI,YAAA,SAAS,EAAGI,KAAD,IAAW;AAClB,kBAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBZ,gBAAAA,UAAU,CAACK,IAAI,CAACE,EAAN,CAAV;AACH,eAFD,MAEO,IAAII,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC/BX,gBAAAA,UAAU,CAACI,IAAI,CAACE,EAAN,CAAV;AACH;AACJ,aARL;AASI,YAAA,IAAI,EAAC,MATT;AAUI,YAAA,SAAS,EAAC,iBAVd;AAWI,YAAA,YAAY,EAAEF,IAAI,CAACK,KAXvB;AAYI,YAAA,GAAG,EAAER,UAZT;AAaI,YAAA,SAAS;AAbb;AAAA;AAAA;AAAA;AAAA,kBAZH,CA2BG;AAjCR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqCI;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,OAAO,EAAE,MAAMC,UAAU,CAACE,IAAI,CAACE,EAAN,CAF7B;AAAA,iCAII;AACI,YAAA,SAAS,EAAC,eADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,OAAO,EAAC,WAHZ;AAII,YAAA,MAAM,EAAC,cAJX;AAAA,mCAMI;AACI,cAAA,aAAa,EAAC,OADlB;AAEI,cAAA,cAAc,EAAC,OAFnB;AAGI,cAAA,WAAW,EAAE,CAHjB;AAII,cAAA,CAAC,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA,SAAyCF,IAAI,CAACE,EAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH;;KA1EQZ,Q;AA4ET,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nfunction TodoList({\n    checkBut,\n    but,\n    completeTodo,\n    markAsEditting,\n    updateTodo,\n    cancelEdit,\n    inputTitle,\n    deleteTodo,\n}) {\n    return (\n        <TransitionGroup component=\"ul\" className=\"todo-list\">\n            {checkBut(but).map((todo, index) => (\n                <CSSTransition timeout={300} classNames=\"slide-horizontal\">\n                    <li className=\"todo-item-container\" key={todo.id}>\n                        <div className=\"todo-item\">\n                            <input\n                                type=\"checkbox\"\n                                onChange={() => completeTodo(todo.id)}\n                                checked={todo.isComplete && true}\n                            />\n                            {!todo.isEditting ? (\n                                <span\n                                    onDoubleClick={() =>\n                                        markAsEditting(todo.id)\n                                    }\n                                    className={`todo-item-label ${\n                                        todo.isComplete ? \"line-through\" : \"\"\n                                    }`}\n                                >\n                                    {todo.title}\n                                </span>\n                            ) : (\n                                <input\n                                    onBlur={() => updateTodo(todo.id)}\n                                    onKeyDown={(event) => {\n                                        if (event.key === \"Enter\") {\n                                            updateTodo(todo.id);\n                                        } else if (event.key === \"Escape\") {\n                                            cancelEdit(todo.id);\n                                        }\n                                    }}\n                                    type=\"text\"\n                                    className=\"todo-item-input\"\n                                    defaultValue={todo.title}\n                                    ref={inputTitle}\n                                    autoFocus\n                                />\n                                //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n                            )}\n                        </div>\n                        <button\n                            className=\"x-button\"\n                            onClick={() => deleteTodo(todo.id)}\n                        >\n                            <svg\n                                className=\"x-button-icon\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M6 18L18 6M6 6l12 12\"\n                                />\n                            </svg>\n                        </button>\n                    </li>\n                </CSSTransition>\n            ))}\n        </TransitionGroup>\n    );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}