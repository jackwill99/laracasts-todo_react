{"ast":null,"code":"var _jsxFileName = \"/Users/wailwinphyo/root/projects/React/lc-react/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport \"../reset.css\";\nimport \"../App.css\";\nimport NoTodo from \"./NoTodo\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { TodoContext } from \"./../context/TodoContext\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let {\n    name,\n    addTodo,\n    onInputHandle,\n    inputValue,\n    todos,\n    checkBut,\n    but,\n    completeTodo,\n    markAsEditting,\n    updateTodo,\n    cancelEdit,\n    inputTitle,\n    deleteTodo,\n    setName,\n    changeForOne,\n    changeForTwo,\n    toggleForOne,\n    toggleForTwo,\n    checkAll,\n    checkButton,\n    clearCompleted\n  } = useContext(TodoContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What is your name? \",\n        name: \"name\",\n        className: \"todo-input\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        htmlFor: \"name\",\n        className: \"nameLabel\",\n        children: [\"Hello, \", name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo,\n        inputValue: inputValue,\n        onInputHandle: onInputHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), todos.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TransitionGroup, {\n          component: \"ul\",\n          className: \"todo-list\",\n          children: checkBut(but).map((todo, index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n            timeout: 300,\n            classNames: \"slide-horizontal\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(TodoList, {\n              todo: todo,\n              completeTodo: completeTodo,\n              markAsEditting: markAsEditting,\n              updateTodo: updateTodo,\n              cancelEdit: cancelEdit,\n              inputTitle: inputTitle,\n              deleteTodo: deleteTodo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggleOne\",\n            onClick: changeForOne,\n            children: \"Toggle One Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggleTwo\",\n            onClick: changeForTwo,\n            children: \"Toggle Two Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: toggleForOne,\n          timeout: 300,\n          classNames: \"slide-vertical\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"check-all-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button\",\n                onClick: checkAll,\n                children: \"Check All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"span\",\n                children: [checkBut(but).length, \" \", but !== \"complete\" ? \"remaining\" : \"\", \" items\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: toggleForTwo,\n          timeout: 300,\n          classNames: \"slide-vertical\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-buttons-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `button filter-button ${but === \"all\" ? \"filter-button-active\" : \"\"}`,\n                  onClick: () => checkButton(\"all\"),\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `button filter-button ${but === \"active\" ? \"filter-button-active\" : \"\"}`,\n                  onClick: () => checkButton(\"active\"),\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `button filter-button ${but === \"complete\" ? \"filter-button-active\" : \"\"}`,\n                  onClick: () => checkButton(\"complete\"),\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button\",\n                  onClick: clearCompleted,\n                  children: \"Clear completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(NoTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"5Kpo47GOK+cKhh8v22Ng1hwjIaU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/lc-react/src/components/App.jsx"],"names":["useContext","NoTodo","TodoForm","TodoList","TodoContext","CSSTransition","TransitionGroup","App","name","addTodo","onInputHandle","inputValue","todos","checkBut","but","completeTodo","markAsEditting","updateTodo","cancelEdit","inputTitle","deleteTodo","setName","changeForOne","changeForTwo","toggleForOne","toggleForTwo","checkAll","checkButton","clearCompleted","event","target","value","length","map","todo","index","id"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport \"../reset.css\";\nimport \"../App.css\";\nimport NoTodo from \"./NoTodo\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { TodoContext } from \"./../context/TodoContext\";\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nfunction App() {\n    let {\n        name,\n        addTodo,\n        onInputHandle,\n        inputValue,\n        todos,\n        checkBut,\n        but,\n        completeTodo,\n        markAsEditting,\n        updateTodo,\n        cancelEdit,\n        inputTitle,\n        deleteTodo,\n        setName,\n        changeForOne,\n        changeForTwo,\n        toggleForOne,\n        toggleForTwo,\n        checkAll,\n        checkButton,\n        clearCompleted,\n    } = useContext(TodoContext);\n    return (\n        <div className=\"todo-app-container\">\n            <div className=\"todo-app\">\n                <input\n                    type=\"text\"\n                    placeholder=\"What is your name? \"\n                    name=\"name\"\n                    className=\"todo-input\"\n                    value={name}\n                    onChange={(event) => setName(event.target.value)}\n                />\n                <p htmlFor=\"name\" className=\"nameLabel\">\n                    Hello, {name}{\" \"}\n                </p>\n                <h2>Todo App</h2>\n\n                <TodoForm\n                    addTodo={addTodo}\n                    inputValue={inputValue}\n                    onInputHandle={onInputHandle}\n                />\n\n                {todos.length > 0 ? (\n                    <>\n                        <TransitionGroup component='ul' className='todo-list'>\n                            {checkBut(but).map((todo, index) => (\n                                <CSSTransition key={todo.id} timeout={300} classNames='slide-horizontal' unmountOnExit>\n                                    <TodoList\n                                        todo={todo}\n                                        completeTodo={completeTodo}\n                                        markAsEditting={markAsEditting}\n                                        updateTodo={updateTodo}\n                                        cancelEdit={cancelEdit}\n                                        inputTitle={inputTitle}\n                                        deleteTodo={deleteTodo}\n                                    />\n                                </CSSTransition>\n                            ))}\n                        </TransitionGroup>\n\n                        <div className=\"toggle-container\">\n                            <div className=\"toggleOne\" onClick={changeForOne}>\n                                Toggle One Features\n                            </div>\n                            <div className=\"toggleTwo\" onClick={changeForTwo}>\n                                Toggle Two Features\n                            </div>\n                        </div>\n\n                        <CSSTransition in={toggleForOne} timeout={300} classNames='slide-vertical' unmountOnExit>\n                            <div>\n                                <div className=\"check-all-container\">\n                                    <div className=\"button\" onClick={checkAll}>\n                                        Check All\n                                    </div>\n\n                                    <span className=\"span\">\n                                        {checkBut(but).length}{\" \"}\n                                        {but !== \"complete\" ? \"remaining\" : \"\"} items\n                                    </span>\n                                </div>\n                            </div>\n                        </CSSTransition>\n\n                        <CSSTransition in={toggleForTwo} timeout={300} classNames='slide-vertical' unmountOnExit>\n                            <div>\n                                <div className=\"other-buttons-container\">\n                                    <div>\n                                        <button\n                                            className={`button filter-button ${\n                                                but === \"all\"\n                                                    ? \"filter-button-active\"\n                                                    : \"\"\n                                            }`}\n                                            onClick={() => checkButton(\"all\")}\n                                        >\n                                            All\n                                        </button>\n                                        <button\n                                            className={`button filter-button ${\n                                                but === \"active\"\n                                                    ? \"filter-button-active\"\n                                                    : \"\"\n                                            }`}\n                                            onClick={() => checkButton(\"active\")}\n                                        >\n                                            Active\n                                        </button>\n                                        <button\n                                            className={`button filter-button ${\n                                                but === \"complete\"\n                                                    ? \"filter-button-active\"\n                                                    : \"\"\n                                            }`}\n                                            onClick={() => checkButton(\"complete\")}\n                                        >\n                                            Completed\n                                        </button>\n                                    </div>\n                                    <div>\n                                        <button\n                                            className=\"button\"\n                                            onClick={clearCompleted}\n                                        >\n                                            Clear completed\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </CSSTransition>\n                    </>\n                ) : (\n                    <NoTodo />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}