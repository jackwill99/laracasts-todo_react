{"ast":null,"code":"var _jsxFileName = \"/Users/wailwinphyo/root/projects/React/lc-react/src/components/TodoList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList({\n  todo,\n  completeTodo,\n  markAsEditting,\n  updateTodo,\n  cancelEdit,\n  inputTitle\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo-item-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => completeTodo(todo.id),\n        checked: todo.isComplete && true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), !todo.isEditting ? /*#__PURE__*/_jsxDEV(\"span\", {\n        onDoubleClick: () => markAsEditting(todo.id),\n        className: `todo-item-label ${todo.isComplete ? \"line-through\" : \"\"}`,\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: () => updateTodo(todo.id),\n        onKeyDown: event => {\n          console.log(event.key);\n\n          if (event.key === \"Enter\") {\n            updateTodo(todo.id);\n          } else if (event.key === \"Escape\") {\n            cancelEdit(todo.id);\n          }\n        },\n        type: \"text\",\n        className: \"todo-item-input\",\n        defaultValue: todo.title,\n        ref: inputTitle,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"x-button\",\n      onClick: () => deleteTodo(todo.id),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"x-button-icon\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M6 18L18 6M6 6l12 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/lc-react/src/components/TodoList.js"],"names":["React","TodoList","todo","completeTodo","markAsEditting","updateTodo","cancelEdit","inputTitle","id","isComplete","isEditting","title","event","console","log","key","deleteTodo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,YAFgB;AAGhBC,EAAAA,cAHgB;AAIhBC,EAAAA,UAJgB;AAKhBC,EAAAA,UALgB;AAMhBC,EAAAA;AANgB,CAAlB,EAOG;AACD,sBACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,EAAE,MAAMJ,YAAY,CAACD,IAAI,CAACM,EAAN,CAF9B;AAGE,QAAA,OAAO,EAAEN,IAAI,CAACO,UAAL,IAAmB;AAH9B;AAAA;AAAA;AAAA;AAAA,cADF,EAMG,CAACP,IAAI,CAACQ,UAAN,gBACC;AACE,QAAA,aAAa,EAAE,MAAMN,cAAc,CAACF,IAAI,CAACM,EAAN,CADrC;AAEE,QAAA,SAAS,EAAG,mBACVN,IAAI,CAACO,UAAL,GAAkB,cAAlB,GAAmC,EACpC,EAJH;AAAA,kBAMGP,IAAI,CAACS;AANR;AAAA;AAAA;AAAA;AAAA,cADD,gBAUC;AACE,QAAA,MAAM,EAAE,MAAMN,UAAU,CAACH,IAAI,CAACM,EAAN,CAD1B;AAEE,QAAA,SAAS,EAAGI,KAAD,IAAW;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB;;AACA,cAAIH,KAAK,CAACG,GAAN,KAAc,OAAlB,EAA2B;AACzBV,YAAAA,UAAU,CAACH,IAAI,CAACM,EAAN,CAAV;AACD,WAFD,MAEO,IAAII,KAAK,CAACG,GAAN,KAAc,QAAlB,EAA4B;AACjCT,YAAAA,UAAU,CAACJ,IAAI,CAACM,EAAN,CAAV;AACD;AACF,SATH;AAUE,QAAA,IAAI,EAAC,MAVP;AAWE,QAAA,SAAS,EAAC,iBAXZ;AAYE,QAAA,YAAY,EAAEN,IAAI,CAACS,KAZrB;AAaE,QAAA,GAAG,EAAEJ,UAbP;AAcE,QAAA,SAAS;AAdX;AAAA;AAAA;AAAA;AAAA,cAVD,CA0BC;AAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoCE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,MAAMS,UAAU,CAACd,IAAI,CAACM,EAAN,CAAtD;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,MAAM,EAAC,cAJT;AAAA,+BAME;AACE,UAAA,aAAa,EAAC,OADhB;AAEE,UAAA,cAAc,EAAC,OAFjB;AAGE,UAAA,WAAW,EAAE,CAHf;AAIE,UAAA,CAAC,EAAC;AAJJ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA,KAAyCN,IAAI,CAACM,EAA9C;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD;;KA9DQP,Q;AAgET,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nfunction TodoList({\n  todo,\n  completeTodo,\n  markAsEditting,\n  updateTodo,\n  cancelEdit,\n  inputTitle,\n}) {\n  return (\n    <li className=\"todo-item-container\" key={todo.id}>\n      <div className=\"todo-item\">\n        <input\n          type=\"checkbox\"\n          onChange={() => completeTodo(todo.id)}\n          checked={todo.isComplete && true}\n        />\n        {!todo.isEditting ? (\n          <span\n            onDoubleClick={() => markAsEditting(todo.id)}\n            className={`todo-item-label ${\n              todo.isComplete ? \"line-through\" : \"\"\n            }`}\n          >\n            {todo.title}\n          </span>\n        ) : (\n          <input\n            onBlur={() => updateTodo(todo.id)}\n            onKeyDown={(event) => {\n              console.log(event.key);\n              if (event.key === \"Enter\") {\n                updateTodo(todo.id);\n              } else if (event.key === \"Escape\") {\n                cancelEdit(todo.id);\n              }\n            }}\n            type=\"text\"\n            className=\"todo-item-input\"\n            defaultValue={todo.title}\n            ref={inputTitle}\n            autoFocus\n          />\n          //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n        )}\n      </div>\n      <button className=\"x-button\" onClick={() => deleteTodo(todo.id)}>\n        <svg\n          className=\"x-button-icon\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </button>\n    </li>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}