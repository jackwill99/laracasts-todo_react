{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nfunction Toggle(initialState = true) {\n  _s();\n\n  let [visible, setVisible] = useState(initialState);\n\n  function toggle() {\n    setVisible(previous => !previous);\n  } // ðŸ›  setVisible use the functional style, because the updated value is based on the previous value\n\n\n  return [visible, toggle];\n}\n\n_s(Toggle, \"V7vzBQWoGaiEivMKU4oVqrRT4i0=\");\n\n_c = Toggle;\nexport default Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/lc-react/src/hooks/Toggle.js"],"names":["useState","Toggle","initialState","visible","setVisible","toggle","previous"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,MAAT,CAAgBC,YAAY,GAAG,IAA/B,EAAqC;AAAA;;AACjC,MAAI,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAACE,YAAD,CAAnC;;AAEA,WAASG,MAAT,GAAkB;AACdD,IAAAA,UAAU,CAACE,QAAQ,IAAI,CAACA,QAAd,CAAV;AACH,GALgC,CAMjC;;;AAEA,SAAO,CAACH,OAAD,EAAUE,MAAV,CAAP;AACH;;GATQJ,M;;KAAAA,M;AAWT,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\"\n\nfunction Toggle(initialState = true) {\n    let [visible,setVisible] = useState(initialState)  \n\n    function toggle() {\n        setVisible(previous => !previous)\n    }\n    // ðŸ›  setVisible use the functional style, because the updated value is based on the previous value\n\n    return [visible, toggle]\n}\n\nexport default Toggle"]},"metadata":{},"sourceType":"module"}