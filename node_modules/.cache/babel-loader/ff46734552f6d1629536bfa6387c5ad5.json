{"ast":null,"code":"var _jsxFileName = \"/Users/wailwinphyo/root/projects/React/lc-react/src/components/TodoList.js\";\nimport React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList({\n  checkBut,\n  but,\n  completeTodo,\n  markAsEditting,\n  updateTodo,\n  cancelEdit,\n  inputTitle,\n  deleteTodo\n}) {\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: checkBut(but).map((todo, index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 300,\n        classNames: \"slide-horizontal\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todo-item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => completeTodo(todo.id),\n              checked: todo.isComplete && true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this), !todo.isEditting ? /*#__PURE__*/_jsxDEV(\"span\", {\n              onDoubleClick: () => markAsEditting(todo.id),\n              className: `todo-item-label ${todo.isComplete ? \"line-through\" : \"\"}`,\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              onBlur: () => updateTodo(todo.id),\n              onKeyDown: event => {\n                if (event.key === \"Enter\") {\n                  updateTodo(todo.id);\n                } else if (event.key === \"Escape\") {\n                  cancelEdit(todo.id);\n                }\n              },\n              type: \"text\",\n              className: \"todo-item-input\",\n              defaultValue: todo.title,\n              ref: inputTitle,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this) //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n            ]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"x-button\",\n            onClick: () => deleteTodo(todo.id),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"x-button-icon\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/lc-react/src/components/TodoList.js"],"names":["React","CSSTransition","TransitionGroup","TodoList","checkBut","but","completeTodo","markAsEditting","updateTodo","cancelEdit","inputTitle","deleteTodo","map","todo","index","id","isComplete","isEditting","title","event","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,QADc;AAEdC,EAAAA,GAFc;AAGdC,EAAAA,YAHc;AAIdC,EAAAA,cAJc;AAKdC,EAAAA,UALc;AAMdC,EAAAA,UANc;AAOdC,EAAAA,UAPc;AAQdC,EAAAA;AARc,CAAlB,EASG;AACC,sBACI,QAAC,eAAD;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKP,QAAQ,CAACC,GAAD,CAAR,CAAcO,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBACf,QAAC,aAAD;AAAe,QAAA,OAAO,EAAE,GAAxB;AAA6B,QAAA,UAAU,EAAC,kBAAxC;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,QAAQ,EAAE,MAAMR,YAAY,CAACO,IAAI,CAACE,EAAN,CAFhC;AAGI,cAAA,OAAO,EAAEF,IAAI,CAACG,UAAL,IAAmB;AAHhC;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMK,CAACH,IAAI,CAACI,UAAN,gBACG;AACI,cAAA,aAAa,EAAE,MACXV,cAAc,CAACM,IAAI,CAACE,EAAN,CAFtB;AAII,cAAA,SAAS,EAAG,mBACRF,IAAI,CAACG,UAAL,GACM,cADN,GAEM,EACT,EARL;AAAA,wBAUKH,IAAI,CAACK;AAVV;AAAA;AAAA;AAAA;AAAA,oBADH,gBAcG;AACI,cAAA,MAAM,EAAE,MAAMV,UAAU,CAACK,IAAI,CAACE,EAAN,CAD5B;AAEI,cAAA,SAAS,EAAGI,KAAD,IAAW;AAClB,oBAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBZ,kBAAAA,UAAU,CAACK,IAAI,CAACE,EAAN,CAAV;AACH,iBAFD,MAEO,IAAII,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC/BX,kBAAAA,UAAU,CAACI,IAAI,CAACE,EAAN,CAAV;AACH;AACJ,eARL;AASI,cAAA,IAAI,EAAC,MATT;AAUI,cAAA,SAAS,EAAC,iBAVd;AAWI,cAAA,YAAY,EAAEF,IAAI,CAACK,KAXvB;AAYI,cAAA,GAAG,EAAER,UAZT;AAaI,cAAA,SAAS;AAbb;AAAA;AAAA;AAAA;AAAA,oBAdH,CA6BG;AAnCR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAuCI;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,OAAO,EAAE,MAAMC,UAAU,CAACE,IAAI,CAACE,EAAN,CAF7B;AAAA,mCAII;AACI,cAAA,SAAS,EAAC,eADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,OAAO,EAAC,WAHZ;AAII,cAAA,MAAM,EAAC,cAJX;AAAA,qCAMI;AACI,gBAAA,aAAa,EAAC,OADlB;AAEI,gBAAA,cAAc,EAAC,OAFnB;AAGI,gBAAA,WAAW,EAAE,CAHjB;AAII,gBAAA,CAAC,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAvCJ;AAAA,WAAyCF,IAAI,CAACE,EAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoEH;;KA9EQZ,Q;AAgFT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nfunction TodoList({\n    checkBut,\n    but,\n    completeTodo,\n    markAsEditting,\n    updateTodo,\n    cancelEdit,\n    inputTitle,\n    deleteTodo,\n}) {\n    return (\n        <TransitionGroup>\n            <ul className=\"todo-list\">\n                {checkBut(but).map((todo, index) => (\n                    <CSSTransition timeout={300} classNames=\"slide-horizontal\">\n                        <li className=\"todo-item-container\" key={todo.id}>\n                            <div className=\"todo-item\">\n                                <input\n                                    type=\"checkbox\"\n                                    onChange={() => completeTodo(todo.id)}\n                                    checked={todo.isComplete && true}\n                                />\n                                {!todo.isEditting ? (\n                                    <span\n                                        onDoubleClick={() =>\n                                            markAsEditting(todo.id)\n                                        }\n                                        className={`todo-item-label ${\n                                            todo.isComplete\n                                                ? \"line-through\"\n                                                : \"\"\n                                        }`}\n                                    >\n                                        {todo.title}\n                                    </span>\n                                ) : (\n                                    <input\n                                        onBlur={() => updateTodo(todo.id)}\n                                        onKeyDown={(event) => {\n                                            if (event.key === \"Enter\") {\n                                                updateTodo(todo.id);\n                                            } else if (event.key === \"Escape\") {\n                                                cancelEdit(todo.id);\n                                            }\n                                        }}\n                                        type=\"text\"\n                                        className=\"todo-item-input\"\n                                        defaultValue={todo.title}\n                                        ref={inputTitle}\n                                        autoFocus\n                                    />\n                                    //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n                                )}\n                            </div>\n                            <button\n                                className=\"x-button\"\n                                onClick={() => deleteTodo(todo.id)}\n                            >\n                                <svg\n                                    className=\"x-button-icon\"\n                                    fill=\"none\"\n                                    viewBox=\"0 0 24 24\"\n                                    stroke=\"currentColor\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M6 18L18 6M6 6l12 12\"\n                                    />\n                                </svg>\n                            </button>\n                        </li>\n                    </CSSTransition>\n                ))}\n            </ul>\n        </TransitionGroup>\n    );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}