{"ast":null,"code":"var _jsxFileName = \"/Users/wailwinphyo/root/projects/React/lc-react/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport \"../reset.css\";\nimport \"../App.css\";\nimport NoTodo from \"./NoTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    title: \"Finish React Series\",\n    isComplete: false,\n    isEditting: false\n  }, {\n    id: 2,\n    title: \"Go Grocery\",\n    isComplete: false,\n    isEditting: false\n  }, {\n    id: 3,\n    title: \"Take over world\",\n    isComplete: false,\n    isEditting: false\n  }]);\n  let [inputValue, setInputValue] = useState(\"\");\n  let [idForTodo, setIdForTodo] = useState(4);\n  let inputTitle = useRef();\n\n  let addTodo = event => {\n    event.preventDefault();\n\n    if (inputValue.trim().length === 0) {\n      return;\n    }\n\n    setTodos([...todos, {\n      id: idForTodo,\n      title: inputValue,\n      isComplete: false\n    }]);\n    setInputValue(\" \");\n    setIdForTodo(previousId => previousId + 1);\n  };\n\n  let onInputHandle = event => {\n    setInputValue(event.target.value);\n  };\n\n  let deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  let completeTodo = id => {\n    const updateTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updateTodos);\n  };\n\n  let markAsEditting = id => {\n    const updateTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isEditting = !todo.isEditting;\n      }\n\n      return todo;\n    });\n    setTodos(updateTodos);\n  };\n\n  let updateTodo = id => {\n    const updateTodos = todos.map(todo => {\n      if (todo.id === id) {\n        if (inputTitle.current.value.length === 0) {\n          todo.isEditting = !todo.isEditting;\n          return todo;\n        }\n\n        todo.title = inputTitle.current.value;\n        todo.isEditting = !todo.isEditting;\n      }\n\n      return todo;\n    });\n    setTodos(updateTodos);\n  };\n\n  const cancelEdit = id => {\n    let updateTodo = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isEditting = !todo.isEditting;\n      }\n\n      return todo;\n    });\n    setTodos(updateTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        onSubmit: addTodo,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"todo-input\",\n          value: inputValue,\n          onChange: onInputHandle,\n          placeholder: \"What do you need to do?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), todos.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"todo-list\",\n          children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"todo-item-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => completeTodo(todo.id),\n                checked: todo.isComplete && true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), !todo.isEditting ? /*#__PURE__*/_jsxDEV(\"span\", {\n                onDoubleClick: () => markAsEditting(todo.id),\n                className: `todo-item-label ${todo.isComplete ? \"line-through\" : \"\"}`,\n                children: todo.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                onBlur: () => updateTodo(todo.id),\n                onKeyDown: event => {\n                  console.log(event.key);\n\n                  if (event.key === \"Enter\") {\n                    updateTodo(todo.id);\n                  } else if (event.key === \"Escape\") {\n                    cancelEdit(todo.id);\n                  }\n                },\n                type: \"text\",\n                className: \"todo-item-input\",\n                defaultValue: todo.title,\n                ref: inputTitle,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 23\n              }, this) //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n              ]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"x-button\",\n              onClick: () => deleteTodo(todo.id),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"x-button-icon\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M6 18L18 6M6 6l12 12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check-all-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button\",\n              children: \"Check All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"3 items remaining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"other-buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button filter-button filter-button-active\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button filter-button\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button filter-button\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"Clear completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(NoTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CoongGi6xFqrCdLrc42kLWoHHXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/lc-react/src/components/App.jsx"],"names":["useState","useRef","NoTodo","App","todos","setTodos","id","title","isComplete","isEditting","inputValue","setInputValue","idForTodo","setIdForTodo","inputTitle","addTodo","event","preventDefault","trim","length","previousId","onInputHandle","target","value","deleteTodo","filter","todo","completeTodo","updateTodos","map","markAsEditting","updateTodo","current","cancelEdit","index","console","log","key"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport \"../reset.css\";\nimport \"../App.css\";\nimport NoTodo from \"./NoTodo\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: \"Finish React Series\",\n      isComplete: false,\n      isEditting: false,\n    },\n    {\n      id: 2,\n      title: \"Go Grocery\",\n      isComplete: false,\n      isEditting: false,\n    },\n    {\n      id: 3,\n      title: \"Take over world\",\n      isComplete: false,\n      isEditting: false,\n    },\n  ]);\n  let [inputValue, setInputValue] = useState(\"\");\n  let [idForTodo, setIdForTodo] = useState(4);\n  let inputTitle = useRef();\n\n  let addTodo = (event) => {\n    event.preventDefault();\n\n    if (inputValue.trim().length === 0) {\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      { id: idForTodo, title: inputValue, isComplete: false },\n    ]);\n    setInputValue(\" \");\n    setIdForTodo((previousId) => previousId + 1);\n  };\n\n  let onInputHandle = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  let deleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  let completeTodo = (id) => {\n    const updateTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n\n    setTodos(updateTodos);\n  };\n\n  let markAsEditting = (id) => {\n    const updateTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isEditting = !todo.isEditting;\n      }\n      return todo;\n    });\n\n    setTodos(updateTodos);\n  };\n\n  let updateTodo = (id) => {\n    const updateTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        if (inputTitle.current.value.length === 0) {\n          todo.isEditting = !todo.isEditting;\n          return todo;\n        }\n        todo.title = inputTitle.current.value;\n        todo.isEditting = !todo.isEditting;\n      }\n      return todo;\n    });\n\n    setTodos(updateTodos);\n  };\n\n  const cancelEdit = (id) => {\n    let updateTodo = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isEditting = !todo.isEditting;\n      }\n      return todo;\n    });\n    setTodos(updateTodo);\n  };\n\n  return (\n    <div className=\"todo-app-container\">\n      <div className=\"todo-app\">\n        <h2>Todo App</h2>\n        <form action=\"#\" onSubmit={addTodo}>\n          <input\n            type=\"text\"\n            className=\"todo-input\"\n            value={inputValue}\n            onChange={onInputHandle}\n            placeholder=\"What do you need to do?\"\n          />\n        </form>\n\n        {todos.length > 0 ? (\n          <>\n            <ul className=\"todo-list\">\n              {todos.map((todo, index) => (\n                <li className=\"todo-item-container\" key={todo.id}>\n                  <div className=\"todo-item\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={() => completeTodo(todo.id)}\n                      checked={todo.isComplete && true}\n                    />\n                    {!todo.isEditting ? (\n                      <span\n                        onDoubleClick={() => markAsEditting(todo.id)}\n                        className={`todo-item-label ${\n                          todo.isComplete ? \"line-through\" : \"\"\n                        }`}\n                      >\n                        {todo.title}\n                      </span>\n                    ) : (\n                      <input\n                        onBlur={() => updateTodo(todo.id)}\n                        onKeyDown={(event) => {\n                          console.log(event.key);\n                          if (event.key === \"Enter\") {\n                            updateTodo(todo.id);\n                          } else if (event.key === \"Escape\") {\n                            cancelEdit(todo.id);\n                          }\n                        }}\n                        type=\"text\"\n                        className=\"todo-item-input\"\n                        defaultValue={todo.title}\n                        ref={inputTitle}\n                        autoFocus\n                      />\n                      //! In input, defaultValue is only temporary value and you can change later. If you use 'value' , this will be always value.\n                    )}\n                  </div>\n                  <button\n                    className=\"x-button\"\n                    onClick={() => deleteTodo(todo.id)}\n                  >\n                    <svg\n                      className=\"x-button-icon\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M6 18L18 6M6 6l12 12\"\n                      />\n                    </svg>\n                  </button>\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"check-all-container\">\n              <div>\n                <div className=\"button\">Check All</div>\n              </div>\n\n              <span>3 items remaining</span>\n            </div>\n\n            <div className=\"other-buttons-container\">\n              <div>\n                <button className=\"button filter-button filter-button-active\">\n                  All\n                </button>\n                <button className=\"button filter-button\">Active</button>\n                <button className=\"button filter-button\">Completed</button>\n              </div>\n              <div>\n                <button className=\"button\">Clear completed</button>\n              </div>\n            </div>\n          </>\n        ) : (\n          <NoTodo />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}